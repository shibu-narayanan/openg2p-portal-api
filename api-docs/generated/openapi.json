{
  "openapi": "3.1.0",
  "info": {
    "title": "G2P Portal API",
    "description": "\n    This module implements G2P Portal APIs.\n\n    ***********************************\n    Further details goes here\n    ***********************************\n    ",
    "contact": {
      "url": "https://www.openg2p.org/",
      "email": "info@openg2p.org"
    },
    "license": {
      "name": "Mozilla Public License 2.0",
      "url": "https://www.mozilla.org/en-US/MPL/2.0/"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/discovery": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Get Program By Keyword",
        "description": "Retrieves programs by a search keyword. Supports pagination.\n\nArgs:\n\n    keyword (str): The keyword to search for in program names.\n\n    page (int, optional): The page number for paginated results.\n\n    pagesize (int, optional): The number of records to return per page.\n\nReturns:\n\n    A list of programs that match the search criteria.",
        "operationId": "get_program_by_keyword_discovery_get",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "keyword to search",
              "title": "Keyword"
            },
            "description": "keyword to search"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "page number for pagination",
              "title": "Page"
            },
            "description": "page number for pagination"
          },
          {
            "name": "pagesize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "number of records in a page",
              "title": "Pagesize"
            },
            "description": "number of records in a page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramBase"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/program": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Get Programs",
        "description": "Retrieves a list of all programs. Requires authentication.\n\nArgs:\n\n    auth (AuthCredentials): Authentication credentials, obtained via JWT Bearer Auth.\n\nReturns:\n\n    List[Program]: A list of program objects.",
        "operationId": "get_programs_program_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Program"
                  },
                  "type": "array",
                  "title": "Response 200 Get Programs Program Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/program/{programid}": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Get Program By Id",
        "description": "Retrieves a specific program by its ID. Requires authentication.\n\nArgs:\n\n    programid (int): The ID of the program to retrieve.\n\n    auth (AuthCredentials): Authentication credentials, obtained via JWT Bearer Auth.\n\nReturns:\n\n    Program: The requested program object.",
        "operationId": "get_program_by_id_program__programid__get",
        "security": [
          {
            "JwtBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Programid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/programdetails": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Get Program Summary",
        "description": "Retrieves a summary of programs. Requires authentication.\n\nArgs:\n\n    auth (AuthCredentials): Authentication credentials, obtained via JWT Bearer Auth.\n\nReturns:\n\n    List[ProgramSummary]:\n\n    A list of program summary objects. Retrieves program summaries, filtering by partner_id, grouping by program name and enrollment status, and calculating total funds awaited and received.",
        "operationId": "get_program_summary_programdetails_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProgramSummary"
                  },
                  "type": "array",
                  "title": "Response 200 Get Program Summary Programdetails Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/applicationdetails": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Get Application Details",
        "description": "Retrieves details of applications. Requires authentication.\n\nArgs:\n\n    auth (AuthCredentials): Authentication credentials, obtained via JWT Bearer Auth.\n\nReturns:\n\n    List[ApplicationDetails]:\n\n    A list of application detail objects. Focuses on program name, application ID, date applied, and application status for each application linked to the partner_id.",
        "operationId": "get_application_details_applicationdetails_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDetails"
                  },
                  "type": "array",
                  "title": "Response 200 Get Application Details Applicationdetails Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/benefitdetails": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Get Benefit Details",
        "description": "Retrieves details of benefits associated with programs. Requires authentication.\n\nArgs:\n\n    auth (AuthCredentials): Authentication credentials, obtained via JWT Bearer Auth.\n\nReturns:\n\n    List[BenefitDetails]:\n\n    A list of benefit detail objects. Fetches details like program name, enrollment status, funds awaited and received, and entitlement reference numbers for specified partner_id.",
        "operationId": "get_benefit_details_benefitdetails_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BenefitDetails"
                  },
                  "type": "array",
                  "title": "Response 200 Get Benefit Details Benefitdetails Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/form/{programid}": {
      "get": {
        "tags": [
          "portal"
        ],
        "summary": "Get Program Form",
        "description": "Retrieves the form for a specified program.\n\nArgs:\n\n    programid (int): The ID of the program whose form is to be retrieved.\n\n    auth (AuthCredentials): Authentication credentials, obtained via JWT Bearer Auth.\n\nReturns:\n\n    ProgramForm: The form associated with the specified program.",
        "operationId": "get_program_form_form__programid__get",
        "security": [
          {
            "JwtBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Programid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramForm"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "portal"
        ],
        "summary": "Create Or Update Form Draft",
        "description": "Creates or updates a draft of a form for a specified program.\n\nArgs:\n\n    programid (int): The ID of the program for which the form draft is to be created or updated.\n\n    programreginfo (ProgramRegistrantInfo): Information to be filled in the form.\n\n    auth (AuthCredentials): Authentication credentials, obtained via JWT Bearer Auth.\n\nReturns:\n\n    ProgramForm: The created or updated form draft.",
        "operationId": "create_or_update_form_draft_form__programid__put",
        "security": [
          {
            "JwtBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Programid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramRegistrantInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramForm"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/form/{programid}/submit": {
      "post": {
        "tags": [
          "portal"
        ],
        "summary": "Submit Form",
        "description": "Submits a form for a specified program.\n\nArgs:\n\n    programid (int): The ID of the program for which the form is submitted.\n\n    programreginfo (ProgramRegistrantInfo): Information to be submitted in the form.\n\n    auth (AuthCredentials): Authentication credentials, obtained via JWT Bearer Auth.\n\nReturns:\n\n    ProgramForm: The submitted form.",
        "operationId": "submit_form_form__programid__submit_post",
        "security": [
          {
            "JwtBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Programid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramRegistrantInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramForm"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/uploadDocument/{programid}": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Upload Document",
        "operationId": "upload_document_uploadDocument__programid__post",
        "security": [
          {
            "JwtBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Programid"
            }
          },
          {
            "name": "file_tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "File Tag"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_document_uploadDocument__programid__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/getDocument/{document_id}": {
      "get": {
        "tags": [
          "document"
        ],
        "summary": "Get Document By Id",
        "operationId": "get_document_by_id_getDocument__document_id__get",
        "security": [
          {
            "JwtBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Profile",
        "description": "Retrieves the profile of the authenticated user.\n\nArgs:\n\n    auth (AuthCredentials): Authentication credentials, obtained via JWT Bearer Auth.\n\n    online (bool, optional): Indicates whether to fetch the profile online. Defaults to True.\n\nReturns:\n\n    Profile: The profile of the authenticated user.",
        "operationId": "get_profile_auth_profile_get",
        "security": [
          {
            "JwtBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "online",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Online"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfile"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "auth"
        ],
        "summary": "Update Profile",
        "description": "Updates the profile of the authenticated user.\n\nArgs:\n\n    userdata (Profile): The new data for the user's profile.\n\n    auth (AuthCredentials): Authentication credentials, obtained via JWT Bearer Auth.\n\nReturns:\n\n    Confirmation or updated profile data after the update.",
        "operationId": "update_profile_auth_profile_put",
        "security": [
          {
            "JwtBearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "description": "Perform Logout. This clears the Access Tokens and ID Tokens from cookies.\n- Authentication not mandatory.",
        "operationId": "logout_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/getLoginProviders": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Login Providers",
        "description": "Get available Login Providers List. Can also be used to display login providers on UI.\nUse getLoginProviderRedirect API to redirect to this Login Provider to perform login.",
        "operationId": "get_login_providers_auth_getLoginProviders_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginProviderHttpResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/getLoginProviderRedirect/{id}": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Login Provider Redirect",
        "description": "Redirect URL to redirect to the Login Provider's Authorization URL\nbased on the id of login provider given.",
        "operationId": "get_login_provider_redirect_auth_getLoginProviderRedirect__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/",
              "title": "Redirect Uri"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/callback": {
      "get": {
        "tags": [
          "oauth"
        ],
        "summary": "Oauth Callback",
        "description": "Handles the OAuth callback after a user has authenticated with an OAuth provider.\n\nArgs:\n\n    request (Request): The incoming request object containing the OAuth data.\n\nReturns:\n\n    The response object after processing the OAuth callback.",
        "operationId": "oauth_callback_oauth2_callback_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "ping"
        ],
        "summary": "Get Ping",
        "description": "Returns \"pong\" always, if the service is healthy.\nThis can also used for service health checks.",
        "operationId": "get_ping_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApplicationDetails": {
        "properties": {
          "program_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Name"
          },
          "application_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Id"
          },
          "date_applied": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Applied"
          },
          "application_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Status"
          }
        },
        "type": "object",
        "title": "ApplicationDetails"
      },
      "BankDetails": {
        "properties": {
          "bank_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Name"
          },
          "acc_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Acc Number"
          }
        },
        "type": "object",
        "title": "BankDetails"
      },
      "BasicProfile": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "sub": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub"
          },
          "iss": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iss"
          },
          "exp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exp"
          },
          "picture": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture"
          },
          "profile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate"
          },
          "address": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "BasicProfile"
      },
      "BenefitDetails": {
        "properties": {
          "program_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Name"
          },
          "date_approved": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Approved"
          },
          "funds_awaited": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Funds Awaited"
          },
          "funds_received": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Funds Received"
          },
          "entitlement_reference_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entitlement Reference Number"
          }
        },
        "type": "object",
        "title": "BenefitDetails"
      },
      "Body_upload_document_uploadDocument__programid__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_document_uploadDocument__programid__post"
      },
      "DocumentFile": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DocumentFile"
      },
      "ErrorListResponse": {
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "errors"
        ],
        "title": "ErrorListResponse"
      },
      "ErrorResponse": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code",
            "default": ""
          },
          "message": {
            "type": "string",
            "title": "Message",
            "default": ""
          }
        },
        "type": "object",
        "title": "ErrorResponse"
      },
      "GetProfile": {
        "properties": {
          "ids": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RegistrantID"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ids"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "bank_ids": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/BankDetails"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Ids"
          },
          "addl_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addl Name"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name"
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate"
          },
          "phone_numbers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PhoneNumber"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Numbers"
          },
          "birth_place": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Place"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "title": "GetProfile"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginProviderHttpResponse": {
        "properties": {
          "loginProviders": {
            "items": {
              "$ref": "#/components/schemas/LoginProviderResponse"
            },
            "type": "array",
            "title": "Loginproviders"
          }
        },
        "type": "object",
        "required": [
          "loginProviders"
        ],
        "title": "LoginProviderHttpResponse"
      },
      "LoginProviderResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/LoginProviderTypes"
          },
          "displayName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "title": "Displayname"
          },
          "displayIconUrl": {
            "type": "string",
            "title": "Displayiconurl"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "displayName",
          "displayIconUrl"
        ],
        "title": "LoginProviderResponse"
      },
      "LoginProviderTypes": {
        "type": "string",
        "enum": [
          "oauth2_auth_code"
        ],
        "const": "oauth2_auth_code",
        "title": "LoginProviderTypes"
      },
      "PhoneNumber": {
        "properties": {
          "phone_no": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone No"
          },
          "date_collected": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Collected"
          }
        },
        "type": "object",
        "title": "PhoneNumber"
      },
      "Program": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "has_applied": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Applied"
          },
          "self_service_portal_form": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Self Service Portal Form"
          },
          "is_portal_form_mapped": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Portal Form Mapped",
            "default": false
          },
          "is_multiple_form_submission": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Multiple Form Submission",
            "default": false
          },
          "last_application_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Application Status"
          },
          "is_reimbursement_program": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Reimbursement Program"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          },
          "create_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Create Date"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "Program"
      },
      "ProgramBase": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ProgramBase"
      },
      "ProgramForm": {
        "properties": {
          "program_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Id"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "schema": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema"
          },
          "submission_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Data",
            "default": {}
          },
          "program_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Name"
          },
          "program_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Description"
          }
        },
        "type": "object",
        "required": [
          "program_id"
        ],
        "title": "ProgramForm"
      },
      "ProgramRegistrantInfo": {
        "properties": {
          "program_registrant_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Registrant Info",
            "default": {}
          }
        },
        "type": "object",
        "title": "ProgramRegistrantInfo"
      },
      "ProgramSummary": {
        "properties": {
          "program_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Name"
          },
          "enrollment_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enrollment Status"
          },
          "total_funds_awaited": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Funds Awaited"
          },
          "total_funds_received": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Funds Received"
          }
        },
        "type": "object",
        "title": "ProgramSummary"
      },
      "RegistrantID": {
        "properties": {
          "id_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Type"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          }
        },
        "type": "object",
        "title": "RegistrantID"
      },
      "UpdateProfile": {
        "properties": {
          "ids": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RegistrantID"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ids"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "bank_ids": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/BankDetails"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Ids"
          },
          "addl_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addl Name"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name"
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate"
          },
          "phone_numbers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PhoneNumber"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Numbers"
          },
          "birth_place": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Place"
          }
        },
        "type": "object",
        "title": "UpdateProfile"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "JwtBearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
